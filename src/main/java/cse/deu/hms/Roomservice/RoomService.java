/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cse.deu.hms.Roomservice;

import java.io.File;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.*;
import java.util.*;

/**
 *
 * @author SAMSUNG
 */
public class RoomService extends javax.swing.JFrame {

    private String paths = System.getProperty("user.dir");  // 프로젝트 루트 경로
    private File menuFile = new File(paths + "/src/menu_list.txt"); // src폴더에 파일이 있음
    private File reservationFile = new File(paths + "/src/reservation.txt"); // src폴더에 파일이 있음
    private DefaultTableModel menuTableModel;
    private DefaultTableModel purchaseTableModel;
    private final FileManager fileManager;

    /**
     * Creates new form RoomService
     */
    public RoomService() {
        initComponents();
        initializeTableModels();
        fileManager = new FileManager();
        loadMenuData();
    }

    private void initializeTableModels() {
        menuTableModel = new DefaultTableModel(new Object[][]{}, new String[]{"메뉴", "가격"});
        purchaseTableModel = new DefaultTableModel(new Object[][]{}, new String[]{"메뉴", "가격", "수량"});

        jTable1.setModel(menuTableModel);
        jTable2.setModel(purchaseTableModel);
    }

    private void loadMenuData() {
        List<String[]> menuDataList = fileManager.readFile("menu_list.txt"); // FileManager로 파일 읽기

        for (String[] menuData : menuDataList) {
            if (menuData.length == 3 && "룸서비스".equals(menuData[2])) {
                String menu = menuData[0]; // 메뉴 이름
                int price = Integer.parseInt(menuData[1]); // 가격
                menuTableModel.addRow(new Object[]{menu, price}); // 메뉴 데이터 추가
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomCheck = new javax.swing.JDialog();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        roomCheckOK = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        payMent = new javax.swing.JDialog();
        jLabel12 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        pay_to_pay = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        menuReservation = new javax.swing.JDialog();
        menu_reservation_cancel = new javax.swing.JButton();
        pay_to_pay1 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        menuReservationCheck = new javax.swing.JDialog();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        menu_reservation_check_ok = new javax.swing.JButton();
        menuAddButton = new javax.swing.JButton();
        menuDeleteButton = new javax.swing.JButton();
        payment = new javax.swing.JButton();
        menuReservationButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        reservationCheckButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        roomCheckButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "이름", "객실번호" }));

        searchButton.setText("검 색");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("체크인 리스트");

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "고유번호", "객실 번호", "예약자", "전화번호", "금액", "결제 유형"
            }
        ));
        jScrollPane5.setViewportView(jTable5);

        roomCheckOK.setText("선택");
        roomCheckOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomCheckOKActionPerformed(evt);
            }
        });

        cancelButton.setText("취소");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("객실확인");

        javax.swing.GroupLayout roomCheckLayout = new javax.swing.GroupLayout(roomCheck.getContentPane());
        roomCheck.getContentPane().setLayout(roomCheckLayout);
        roomCheckLayout.setHorizontalGroup(
            roomCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomCheckLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roomCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)
                    .addGroup(roomCheckLayout.createSequentialGroup()
                        .addGroup(roomCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(roomCheckLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(roomCheckOK, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        roomCheckLayout.setVerticalGroup(
            roomCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomCheckLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(30, 30, 30)
                .addGroup(roomCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roomCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomCheckOK, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("총 결제 금액");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "카드", "현금", "객실청구" }));

        pay_to_pay.setText("결제");
        pay_to_pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pay_to_payActionPerformed(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "메뉴", "가격", "수량"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jLabel9.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("구매목록");

        jLabel11.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel11.setText("결제");

        javax.swing.GroupLayout payMentLayout = new javax.swing.GroupLayout(payMent.getContentPane());
        payMent.getContentPane().setLayout(payMentLayout);
        payMentLayout.setHorizontalGroup(
            payMentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payMentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(payMentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(payMentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(payMentLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, payMentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pay_to_pay)
                .addContainerGap())
        );
        payMentLayout.setVerticalGroup(
            payMentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payMentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(3, 3, 3)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(payMentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pay_to_pay)
                .addContainerGap())
        );

        menu_reservation_cancel.setText("취소");
        menu_reservation_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_reservation_cancelActionPerformed(evt);
            }
        });

        pay_to_pay1.setText("예약");
        pay_to_pay1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pay_to_pay1ActionPerformed(evt);
            }
        });

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "객실번호", "메뉴", "가격", "수량", "예약시간", "식당 / 룸서비스"
            }
        ));
        jScrollPane6.setViewportView(jTable6);

        jLabel14.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("구매목록");

        jLabel15.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel15.setText("예약");

        javax.swing.GroupLayout menuReservationLayout = new javax.swing.GroupLayout(menuReservation.getContentPane());
        menuReservation.getContentPane().setLayout(menuReservationLayout);
        menuReservationLayout.setHorizontalGroup(
            menuReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuReservationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                    .addGroup(menuReservationLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(0, 588, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuReservationLayout.createSequentialGroup()
                        .addComponent(menu_reservation_cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 492, Short.MAX_VALUE)
                        .addComponent(pay_to_pay1))
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        menuReservationLayout.setVerticalGroup(
            menuReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuReservationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(menuReservationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_to_pay1)
                    .addComponent(menu_reservation_cancel))
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel5.setText("예약 확인");

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "객실번호", "메뉴", "가격", "수량", "예약시간", "식당 / 룸서비스"
            }
        ));
        jTable7.setToolTipText("");
        jScrollPane7.setViewportView(jTable7);

        menu_reservation_check_ok.setText("확인");
        menu_reservation_check_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_reservation_check_okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuReservationCheckLayout = new javax.swing.GroupLayout(menuReservationCheck.getContentPane());
        menuReservationCheck.getContentPane().setLayout(menuReservationCheckLayout);
        menuReservationCheckLayout.setHorizontalGroup(
            menuReservationCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuReservationCheckLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuReservationCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(menuReservationCheckLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(menu_reservation_check_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, menuReservationCheckLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 575, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE))
                .addContainerGap())
        );
        menuReservationCheckLayout.setVerticalGroup(
            menuReservationCheckLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuReservationCheckLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menu_reservation_check_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuAddButton.setText("추가");
        menuAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAddButtonActionPerformed(evt);
            }
        });

        menuDeleteButton.setText("삭제");
        menuDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDeleteButtonActionPerformed(evt);
            }
        });

        payment.setText("결제");
        payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentActionPerformed(evt);
            }
        });

        menuReservationButton.setText("예약");
        menuReservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuReservationButtonActionPerformed(evt);
            }
        });

        backButton.setText("취소");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        reservationCheckButton.setText("예약확인");
        reservationCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationCheckButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.setToolTipText("");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        roomCheckButton.setText("객실확인");
        roomCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomCheckButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("룸서비스");

        jLabel2.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel2.setText("객실 번호");

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "메뉴", "가격"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("구매목록");

        jLabel4.setFont(new java.awt.Font("맑은 고딕", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("메뉴");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "메뉴", "가격", "수량"
            }
        ));
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                            .addComponent(menuAddButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                            .addComponent(menuDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(resetButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roomCheckButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(menuReservationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reservationCheckButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(resetButton))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomCheckButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuDeleteButton)
                    .addComponent(menuAddButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(payment)
                        .addComponent(menuReservationButton)
                        .addComponent(reservationCheckButton))
                    .addComponent(backButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAddButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "메뉴를 선택해주세요.");
            return;
        }

        String menu = (String) menuTableModel.getValueAt(selectedRow, 0);
        int price = (int) menuTableModel.getValueAt(selectedRow, 1);

        // 구매 목록에 이미 존재하는지 확인
        for (int i = 0; i < purchaseTableModel.getRowCount(); i++) {
            String existingMenu = (String) purchaseTableModel.getValueAt(i, 0);
            if (existingMenu.equals(menu)) {
                int quantity = (int) purchaseTableModel.getValueAt(i, 2);
                purchaseTableModel.setValueAt(quantity + 1, i, 2); // 수량 증가
                return;
            }
        }

        // 구매 목록에 없으면 새로 추가
        purchaseTableModel.addRow(new Object[]{menu, price, 1});
    }//GEN-LAST:event_menuAddButtonActionPerformed

    private void menuDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDeleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable2.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "삭제할 구매 항목이 없습니다.");
            return;
        }

        int quantity = (int) purchaseTableModel.getValueAt(selectedRow, 2);

        if (quantity > 1) {
            purchaseTableModel.setValueAt(quantity - 1, selectedRow, 2); // 수량 감소
        } else {
            purchaseTableModel.removeRow(selectedRow); // 수량이 0이 되면 삭제
        }
    }//GEN-LAST:event_menuDeleteButtonActionPerformed

    private void paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentActionPerformed
        // TODO add your handling code here:
        payMent.setSize(300, 400);
        payMent.setResizable(false);
        payMent.setLocationRelativeTo(this);
        payMent.setVisible(true);

        // 구매 목록 데이터를 결제 창 테이블(jTable3)로 복사
        DefaultTableModel purchaseModel = (DefaultTableModel) jTable2.getModel(); // 구매 목록 테이블 모델
        DefaultTableModel paymentModel = (DefaultTableModel) jTable4.getModel(); // 결제 창 테이블 모델
        paymentModel.setRowCount(0); // 결제 창 테이블 초기화

        int totalAmount = 0; // 총 구매 금액 계산 변수

        // 구매 목록 데이터 복사 및 총 금액 계산
        for (int i = 0; i < purchaseModel.getRowCount(); i++) {
            String menu = (String) purchaseModel.getValueAt(i, 0); // 메뉴 이름
            int price = (int) purchaseModel.getValueAt(i, 1); // 가격
            int quantity = (int) purchaseModel.getValueAt(i, 2); // 수량
            int amount = price * quantity; // 품목 총 금액

            totalAmount += amount; // 총 금액 누적

            // 결제 창 테이블에 데이터 추가
            paymentModel.addRow(new Object[]{menu, price, quantity});
        }

        // 총 구매 금액 표시
        jTextField4.setText(String.valueOf(totalAmount)); // jTextField2에 총 금액 설정
    }//GEN-LAST:event_paymentActionPerformed

    private void menuReservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuReservationButtonActionPerformed
        // TODO add your handling code here:
        menuReservation.setSize(700, 350);
        menuReservation.setResizable(false);
        menuReservation.setLocationRelativeTo(this);
        menuReservation.setVisible(true);

        // 구매 목록에서 데이터 가져오기
        DefaultTableModel purchaseModel = (DefaultTableModel) jTable2.getModel();
        DefaultTableModel reservationModel = (DefaultTableModel) jTable6.getModel();
        reservationModel.setRowCount(0); // 예약 테이블 초기화

        // 호실 번호 확인
        String roomNumber = jTextField1.getText().trim();
        if (roomNumber.isEmpty()) {
            JOptionPane.showMessageDialog(this, "호실 번호를 입력하세요.");
            return;
        }

        // 현재 시간 가져오기
        String currentTime = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date());

        // 구매 목록 데이터를 예약 테이블에 추가
        for (int i = 0; i < purchaseModel.getRowCount(); i++) {
            String menu = (String) purchaseModel.getValueAt(i, 0); // 메뉴 이름
            int price = (int) purchaseModel.getValueAt(i, 1);      // 가격
            int quantity = (int) purchaseModel.getValueAt(i, 2);  // 수량

            // 메뉴에 따라 "식당" 또는 "룸서비스" 확인
            String type = getMenuType(menu); // 아래에서 정의한 메서드 호출

            // 예약 테이블에 추가
            reservationModel.addRow(new Object[]{
                roomNumber, // 호실 번호
                menu, // 메뉴 이름
                price, // 가격
                quantity, // 수량
                currentTime, // 예약 시간
                type // "식당" 또는 "룸서비스"
            });
        }
    }//GEN-LAST:event_menuReservationButtonActionPerformed

    private String getMenuType(String menu) {
        String filePath = paths + "/src/menu_list.txt"; // 메뉴 파일 경로
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] menuData = line.split("\t");
                if (menuData.length == 3 && menuData[0].equals(menu)) {
                    return menuData[2]; // "식당" 또는 "룸서비스" 반환
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return "알 수 없음"; // 메뉴 정보가 없을 경우 기본값
    }

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        dispose();  // 뒤로가기
    }//GEN-LAST:event_backButtonActionPerformed

    private void reservationCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationCheckButtonActionPerformed
        // TODO add your handling code here:
        menuReservationCheck.setSize(700, 350);
        menuReservationCheck.setResizable(false);
        menuReservationCheck.setLocationRelativeTo(this);
        menuReservationCheck.setVisible(true);

        // 예약 확인 테이블 초기화
        DefaultTableModel reservationModel = (DefaultTableModel) jTable7.getModel();
        reservationModel.setRowCount(0); // 기존 데이터 삭제

        // 예약 데이터를 저장할 리스트 생성
        List<String[]> reservationDataList = fileManager.readFile("menu_reservation.txt");

        // 예약 파일 읽기
        if (reservationDataList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "예약 데이터가 없습니다.");
            return;
        }

// 리스트를 역순으로 순회하여 테이블에 추가
        for (int i = reservationDataList.size() - 1; i >= 0; i--) {
            String[] data = reservationDataList.get(i);
            reservationModel.addRow(new Object[]{data[0], data[1], Integer.parseInt(data[2]),
                Integer.parseInt(data[3]), data[4], data[5]});
        }

        // 리스트를 역순으로 순회하여 테이블에 추가
        for (int i = reservationDataList.size() - 1; i >= 0; i--) {
            String[] data = reservationDataList.get(i);
            String roomNumber = data[0];   // 객실 번호
            String menu = data[1];         // 메뉴 이름
            int price = Integer.parseInt(data[2]); // 가격
            int quantity = Integer.parseInt(data[3]); // 수량
            String time = data[4];         // 예약 시간
            String serviceType = data[5];  // 식당 / 룸서비스

            // 예약 데이터 테이블에 추가
            reservationModel.addRow(new Object[]{
                roomNumber,
                menu,
                price,
                quantity,
                time,
                serviceType // "식당" 또는 "룸서비스"
            });
        }
    }//GEN-LAST:event_reservationCheckButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        purchaseTableModel.setRowCount(0); // 구매 목록 초기화
    }//GEN-LAST:event_resetButtonActionPerformed

    private void roomCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomCheckButtonActionPerformed
        // TODO add your handling code here:
        roomCheck.setSize(800, 400);
        roomCheck.setResizable(false);
        roomCheck.setLocationRelativeTo(this);
        roomCheck.setVisible(true);

        // 테이블 초기화
        DefaultTableModel model = (DefaultTableModel) jTable5.getModel();
        model.setRowCount(0);

        // checkIn_list.txt 파일에서 데이터 읽기
        String filePath = paths + "/src/checkIn_list.txt";

        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split("\t");
                if (data.length >= 6) { // 유효한 데이터만 추가
                    model.addRow(new Object[]{
                        data[0], // 고유번호
                        data[1], // 객실 번호
                        data[2], // 예약자
                        data[3], // 전화번호
                        data[4], // 금액
                        data[5] // 결제 유형
                    });
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "체크인 리스트를 불러오는 중 오류가 발생했습니다: " + e.getMessage());
        }
    }//GEN-LAST:event_roomCheckButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String keyword = jTextField1.getText().trim(); // 검색어
        String searchCategory = (String) jComboBox2.getSelectedItem(); // 검색 기준 ("이름" 또는 "객실번호")

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // 기존 테이블 데이터 초기화

        try (BufferedReader reader = new BufferedReader(new FileReader(reservationFile))) {
            String line;
            while ((line = reader.readLine()) != null) {
                // 예약 데이터를 읽어서 배열로 분리
                String[] reservationData = line.split("\t");

                // 데이터 구조가 유효한지 확인
                if (reservationData.length >= 9) { // 최소 9개의 필드가 있어야 함
                    boolean matches = false;

                    // 검색어가 비어 있으면 모든 데이터를 추가
                    if (keyword.isEmpty()) {
                        matches = true; // 모든 데이터를 추가
                    } else if ("이름".equals(searchCategory)) {
                        matches = reservationData[2].contains(keyword); // 예약자 이름 검색
                    } else if ("객실번호".equals(searchCategory)) {
                        matches = reservationData[1].equals(keyword); // 객실번호 검색
                    }

                    // 조건에 맞는 데이터를 테이블에 추가
                    if (matches) {
                        String[] tableRow = new String[8];
                        tableRow[0] = reservationData[0]; // 고유번호
                        tableRow[1] = reservationData[1]; // 객실번호
                        tableRow[2] = reservationData[2]; // 예약자
                        tableRow[3] = reservationData[3]; // 전화번호
                        tableRow[4] = reservationData[5]; // 금액
                        tableRow[5] = reservationData[6]; // 체크인 날짜
                        tableRow[6] = reservationData[7]; // 체크아웃 날짜
                        tableRow[7] = reservationData[8]; // 결제 유형

                        model.addRow(tableRow);
                    }
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "파일을 읽는 중 오류가 발생했습니다: " + e.getMessage());
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void roomCheckOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomCheckOKActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable5.getSelectedRow();

        if (selectedRow < 0) { // 선택된 행이 없을 때
            JOptionPane.showMessageDialog(this, "객실 번호를 선택하세요.");
            return;
        }

        // 선택된 행의 객실 번호 가져오기 (2번째 열 데이터)
        String roomNumber = (String) jTable5.getValueAt(selectedRow, 1);

        // 식당 화면의 객실 번호 텍스트 필드에 설정
        jTextField1.setText(roomNumber);

        // 객실 확인 창 닫기
        roomCheck.dispose();

        // 성공 메시지 출력
        JOptionPane.showMessageDialog(this, "객실 번호가 설정되었습니다: " + roomNumber);
    }//GEN-LAST:event_roomCheckOKActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        roomCheck.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void pay_to_payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pay_to_payActionPerformed
        // TODO add your handling code here:
        String roomNumber = jTextField1.getText().trim();
        if (roomNumber.isEmpty()) {
            JOptionPane.showMessageDialog(this, "객실 번호를 입력하세요.");
            return;
        }

        // 총 금액 확인
        String totalAmountStr = jTextField4.getText().trim();
        int totalAmount;
        try {
            totalAmount = Integer.parseInt(totalAmountStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "총 금액이 잘못되었습니다.");
            return;
        }

        // 결제 카테고리 확인
        String paymentCategory = (String) jComboBox3.getSelectedItem();
        if (paymentCategory == null || paymentCategory.isEmpty()) {
            JOptionPane.showMessageDialog(this, "결제 카테고리를 선택하세요.");
            return;
        }

        // 현재 시간 가져오기
        String currentTime = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date());

        // menu_payment.txt 파일에 데이터 저장
        String paymentFilePath = paths + "/src/menu_payment.txt";

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(paymentFilePath, true))) {
            DefaultTableModel paymentModel = (DefaultTableModel) jTable4.getModel(); // 결제 창 테이블 데이터 가져오기

            for (int i = 0; i < paymentModel.getRowCount(); i++) {
                String menu = (String) paymentModel.getValueAt(i, 0); // 메뉴 이름
                int price = (int) paymentModel.getValueAt(i, 1);      // 단가
                int quantity = (int) paymentModel.getValueAt(i, 2);  // 수량
                int totalPrice = price * quantity;                   // 품목 총 금액

                // 메뉴의 식당/룸서비스 정보를 가져오기
                String serviceType = getMenuType(menu);

                // 파일에 저장할 데이터 작성
                String paymentData = String.format(
                        "%s\t%s\t%d\t%d\t%s\t%s\t%s\n",
                        roomNumber, // 객실 번호
                        menu, // 메뉴 이름
                        totalPrice, // 품목 총 금액
                        quantity, // 수량
                        currentTime, // 결제 시간
                        serviceType, // 식당/룸서비스
                        paymentCategory // 결제 카테고리
                );

                // 파일에 데이터 저장
                writer.write(paymentData);
            }

            // 결제 유형에 따른 처리
            if ("객실청구".equals(paymentCategory)) {
                // 기존 객실 금액에 결제 금액 추가
                updateRoomTotal(roomNumber, totalAmount);

                JOptionPane.showMessageDialog(this, "객실 청구 완료");
            } else {
                JOptionPane.showMessageDialog(this, "결제 완료");
            }

            // 결제 창 닫기 및 필드 초기화
            payMent.dispose();
            resetFieldsAndTables();

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "결제 데이터를 저장하는 중 오류가 발생했습니다: " + e.getMessage());
        }
    }//GEN-LAST:event_pay_to_payActionPerformed

    private void updateRoomTotal(String roomNumber, int additionalAmount) {
        String checkInFilePath = paths + "/src/checkIn_list.txt";
        List<String> updatedLines = new ArrayList<>();

        try (BufferedReader reader = new BufferedReader(new FileReader(checkInFilePath))) {
            String line;

            while ((line = reader.readLine()) != null) {
                String[] data = line.split("\t");

                if (data.length >= 6 && data[1].equals(roomNumber)) {
                    // 기존 객실 금액에 추가 금액 더하기
                    int currentAmount = Integer.parseInt(data[4]);
                    int newAmount = currentAmount + additionalAmount;
                    data[4] = String.valueOf(newAmount); // 금액 업데이트

                    // 업데이트된 데이터를 다시 하나의 문자열로 결합
                    updatedLines.add(String.join("\t", data));
                } else {
                    updatedLines.add(line); // 다른 객실 데이터는 그대로 추가
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "객실 금액 업데이트 중 오류가 발생했습니다: " + e.getMessage());
            return;
        }

        // 변경된 내용을 다시 파일에 저장
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(checkInFilePath))) {
            for (String updatedLine : updatedLines) {
                writer.write(updatedLine);
                writer.newLine();
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "객실 금액 저장 중 오류가 발생했습니다: " + e.getMessage());
        }
    }

    private void resetFieldsAndTables() {
        // 객실 번호 초기화
        jTextField1.setText("");

        // 구매 목록 테이블 초기화
        purchaseTableModel.setRowCount(0);

        // 결제 금액 필드 초기화 (결제 창 관련)
        if (jTextField4 != null) {
            jTextField4.setText("");
        }
    }

    private void menu_reservation_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_reservation_cancelActionPerformed
        // TODO add your handling code here:
        menuReservation.dispose();
    }//GEN-LAST:event_menu_reservation_cancelActionPerformed

    private void pay_to_pay1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pay_to_pay1ActionPerformed
        // TODO add your handling code here:

        // 예약 창 열기
        menuReservation.setSize(600, 350);
        menuReservation.setResizable(false);
        menuReservation.setLocationRelativeTo(this);
        menuReservation.setVisible(true);

        DefaultTableModel reservationModel = (DefaultTableModel) jTable6.getModel();

        if (reservationModel.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "저장할 예약 정보가 없습니다.");
            return;
        }

        String reservationFilePath = paths + "/src/menu_reservation.txt";
        StringBuilder reservationData = new StringBuilder();

        for (int i = 0; i < reservationModel.getRowCount(); i++) {
            String roomNumber = (String) reservationModel.getValueAt(i, 0);
            String menu = (String) reservationModel.getValueAt(i, 1);
            int price = (int) reservationModel.getValueAt(i, 2);
            int quantity = (int) reservationModel.getValueAt(i, 3);
            String time = (String) reservationModel.getValueAt(i, 4);
            String type = (String) reservationModel.getValueAt(i, 5);

            reservationData.append(roomNumber).append("\t")
                    .append(menu).append("\t")
                    .append(price).append("\t")
                    .append(quantity).append("\t")
                    .append(time).append("\t")
                    .append(type).append("\n");
        }

        try (BufferedWriter writer = new BufferedWriter(new FileWriter(reservationFilePath, true))) {
            writer.write(reservationData.toString());
            JOptionPane.showMessageDialog(this, "예약이 저장되었습니다.");
            menuReservation.dispose();

            // 초기화 코드 추가
            resetFieldsAndTables();

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "파일 저장 중 오류가 발생했습니다: " + e.getMessage());
        }
    }//GEN-LAST:event_pay_to_pay1ActionPerformed

    private void menu_reservation_check_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_reservation_check_okActionPerformed
        // TODO add your handling code here:
        menuReservationCheck.dispose();
    }//GEN-LAST:event_menu_reservation_check_okActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomService().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton menuAddButton;
    private javax.swing.JButton menuDeleteButton;
    private javax.swing.JDialog menuReservation;
    private javax.swing.JButton menuReservationButton;
    private javax.swing.JDialog menuReservationCheck;
    private javax.swing.JButton menu_reservation_cancel;
    private javax.swing.JButton menu_reservation_check_ok;
    private javax.swing.JDialog payMent;
    private javax.swing.JButton pay_to_pay;
    private javax.swing.JButton pay_to_pay1;
    private javax.swing.JButton payment;
    private javax.swing.JButton reservationCheckButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JDialog roomCheck;
    private javax.swing.JButton roomCheckButton;
    private javax.swing.JButton roomCheckOK;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
